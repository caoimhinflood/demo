import static java.lang.System.getenv

buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
                dependencyCheckVersion  = '3.0.2'
                jfrogBuildInfoExtractor = '3.1.1'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
                classpath("org.owasp:dependency-check-gradle:${dependencyCheckVersion}")
                classpath("org.jfrog.buildinfo:build-info-extractor-gradle:${jfrogBuildInfoExtractor}")
	}
}

plugins {
  id "com.jfrog.artifactory" version "4.5.4"
  id "org.owasp.dependencycheck" version "3.0.2"
}


// Apply the maven-publish plugin to publish artifacts to a Maven Repository
// Apply the Artifactory Build Repository plugin
// Apply the Java plugin to all projects
// Apply the eclipse plugin to all projects
// Apply the SpringBoot plugin to all projects
// Apply the OWASP DependencyCheck plugin to all projects
allprojects {
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: "com.jfrog.artifactory"
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'idea'
    apply plugin: 'org.owasp.dependencycheck'

    group = 'com.ncisecurityproject'
    version = '0.0.1-SNAPSHOT'
    status = version.endsWith('-SNAPSHOT') ? 'integration' : 'release'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}


repositories {
	mavenCentral()
}



// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    jcenter()

    // You can declare any Maven/Ivy/file repository here.
    maven {
            url 'http://localhost:8081/artifactory/plugins-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
            name = "maven-main-cache" 
       }
}



dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.jfrog.artifactory.client:artifactory-java-client-services:+')
	runtime('mysql:mysql-connector-java')
        runtime('net.sourceforge.nekohtml:nekohtml:1.9.21')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = 'libs-snapshot-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }  
        //Add another publication named 'mavenReports' just for the owasp dependency check report       
        defaults {
            publications ('mavenJava', 'mavenReports')
            publishArtifacts = true
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            
            pom.withXml {
                    asNode().with {
                        appendNode('packaging', 'jar')
                        appendNode('name', 'ncisecurity-project-demo')
                        appendNode('description', 'NCI Security Project Demo')
                        appendNode('url', 'https://github.com/caoimhinflood/demo')
                        appendNode('licenses').with {
                            appendNode('license').with {
                                appendNode('name', 'The Apache Software License, Version 2.0')
                                appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0')
                            }
                        }
                        appendNode('developers').with {
                            appendNode('developer').with {
                                appendNode('id', 'cflood')
                                appendNode('name', 'Caoimhin Flood')
                                appendNode('email', 'caoimhinflood@gmail.com')
                            }
                        }
                     }
                 }
    }

    //Use a separate publication for the OWASP DependencyCheck reports
    mavenReports(MavenPublication) {
      groupId 'com.ncisecurityproject.reports'
      artifactId 'webapp'
      artifact file("build/reports/dependency-check-report.html")
    }
  }
}

// dependencyCheck settings
dependencyCheck { 
// Format of the security report output e.g HTML, JSON, XML 
     autoUpdate=false
     cveValidForHours=1
     format='ALL'
}

check.dependsOn dependencyCheckAnalyze

task printDependencyCheckReportLink(dependsOn: dependencyCheckAnalyze){
doLast{
    println "Dependency Check Report Link : " + project.buildDir + "/reports/dependency-check-report.html"
 }
}



//artifactoryPublish.dependsOn 'dependencyCheck'

//artifactoryPublish.dependsOn 'dependencyCheck', 'build'

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

